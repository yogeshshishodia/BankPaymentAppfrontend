{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoanApplicationComponent = class LoanApplicationComponent {\n  constructor(loanService) {\n    this.loanService = loanService;\n    this.accountId = 17; // Example account ID, replace with actual\n  }\n\n  applyForLoan(amount, interestRate, tenure) {\n    this.loanService.applyForLoan(this.accountId, amount, interestRate, tenure).subscribe(response => {\n      console.log(\"Loan application successful\", response);\n      //  this.loadLoans(); // Reload loans after applying to show the updated list\n      alert(\"apply successfull\");\n    }, error => {\n      console.error(\"Error applying for loan\", error);\n      alert(\"error\");\n    });\n  }\n};\nLoanApplicationComponent = __decorate([Component({\n  selector: 'app-loan-application',\n  templateUrl: './loan-application.component.html',\n  styleUrls: ['./loan-application.component.css']\n})], LoanApplicationComponent);","map":{"version":3,"names":["Component","LoanApplicationComponent","constructor","loanService","accountId","applyForLoan","amount","interestRate","tenure","subscribe","response","console","log","alert","error","__decorate","selector","templateUrl","styleUrls"],"sources":["F:\\MyProjects\\bank-payment-frontend\\src\\app\\component\\loan-application\\loan-application.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LoanService } from '../../loan.service';\n\n@Component({\n  selector: 'app-loan-application',\n  templateUrl: './loan-application.component.html',\n  styleUrls: ['./loan-application.component.css']\n})\nexport class LoanApplicationComponent {\n\n  loans: any;\n  loanAmount:any;\n  loanInterestRate:any;\n  loanTenure:any;\n  accountId: number = 17; // Example account ID, replace with actual\n\n\n  constructor(private loanService: LoanService) {}\n\n  applyForLoan(amount: number, interestRate: number, tenure: number) {\n    this.loanService.applyForLoan(this.accountId, amount, interestRate, tenure).subscribe(\n      (response) => {\n        console.log(\"Loan application successful\", response);\n      //  this.loadLoans(); // Reload loans after applying to show the updated list\n        alert(\"apply successfull\")\n      },\n      (error) => {\n        console.error(\"Error applying for loan\", error);\n        alert(\"error\")\n      }\n    );\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EASnCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,SAAS,GAAW,EAAE,CAAC,CAAC;EAGuB;;EAE/CC,YAAYA,CAACC,MAAc,EAAEC,YAAoB,EAAEC,MAAc;IAC/D,IAAI,CAACL,WAAW,CAACE,YAAY,CAAC,IAAI,CAACD,SAAS,EAAEE,MAAM,EAAEC,YAAY,EAAEC,MAAM,CAAC,CAACC,SAAS,CAClFC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,QAAQ,CAAC;MACtD;MACEG,KAAK,CAAC,mBAAmB,CAAC;IAC5B,CAAC,EACAC,KAAK,IAAI;MACRH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CD,KAAK,CAAC,OAAO,CAAC;IAChB,CAAC,CACF;EACH;CAED;AAzBYZ,wBAAwB,GAAAc,UAAA,EALpCf,SAAS,CAAC;EACTgB,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACWjB,wBAAwB,CAyBpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}