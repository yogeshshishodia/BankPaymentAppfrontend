{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../account.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction AccountDetailsComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const dat_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dat_r1.accountNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dat_r1.accountHolderName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 3, dat_r1.amount));\n  }\n}\nexport class AccountDetailsComponent {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n    this.acc = {\n      accountNumber: '',\n      amount: '',\n      accountHolderName: ''\n    };\n  }\n  ngOnInit() {\n    this.loadAccountDetails();\n  }\n  loadAccountDetails() {\n    // Call a service to load the account details (you can implement this based on your backend)\n    this.accountService.getAccountDetails().subscribe(data => {\n      this.acc = Object.values(data);\n    });\n  }\n  static {\n    this.ɵfac = function AccountDetailsComponent_Factory(t) {\n      return new (t || AccountDetailsComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountDetailsComponent,\n      selectors: [[\"app-account-details\"]],\n      decls: 14,\n      vars: 1,\n      consts: [[1, \"container\"], [1, \"account-table\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function AccountDetailsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Account Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"table\", 1)(4, \"thead\")(5, \"tr\")(6, \"th\");\n          i0.ɵɵtext(7, \"Account Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"th\");\n          i0.ɵɵtext(9, \"Account Holder Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"th\");\n          i0.ɵɵtext(11, \"Balance\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(12, \"tbody\");\n          i0.ɵɵtemplate(13, AccountDetailsComponent_tr_13_Template, 8, 5, \"tr\", 2);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngForOf\", ctx.acc);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.CurrencyPipe],\n      styles: [\".container[_ngcontent-%COMP%] {\\n    max-width: 800px;\\n    margin: 0 auto;\\n    padding: 20px;\\n  }\\n  \\n  h1[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-bottom: 20px;\\n    font-size: 2em;\\n  }\\n  \\n  .account-table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    border-collapse: collapse;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .account-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .account-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    padding: 10px;\\n    border: 1px solid #ddd;\\n    text-align: center;\\n  }\\n  \\n  .account-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    background-color: #f2f2f2;\\n    font-weight: bold;\\n  }\\n  \\n  .account-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even) {\\n    background-color: #f9f9f9;\\n  }\\n  \\n  .form-section[_ngcontent-%COMP%] {\\n    margin-bottom: 30px;\\n  }\\n  \\n  .full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n    margin-bottom: 10px;\\n  }\\n  \\n  button.full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    font-size: 1.1em;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2FjY291bnQtZGV0YWlscy9hY2NvdW50LWRldGFpbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsYUFBYTtFQUNmOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsV0FBVztJQUNYLHlCQUF5QjtJQUN6QixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsV0FBVztJQUNYLGFBQWE7SUFDYixnQkFBZ0I7RUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogODAwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGgxIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBmb250LXNpemU6IDJlbTtcclxuICB9XHJcbiAgXHJcbiAgLmFjY291bnQtdGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmFjY291bnQtdGFibGUgdGgsIC5hY2NvdW50LXRhYmxlIHRkIHtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBcclxuICAuYWNjb3VudC10YWJsZSB0aCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5hY2NvdW50LXRhYmxlIHRib2R5IHRyOm50aC1jaGlsZChldmVuKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1zZWN0aW9uIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5mdWxsLXdpZHRoIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uLmZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgZm9udC1zaXplOiAxLjFlbTtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","dat_r1","accountNumber","accountHolderName","ɵɵpipeBind1","amount","AccountDetailsComponent","constructor","accountService","router","acc","ngOnInit","loadAccountDetails","getAccountDetails","subscribe","data","Object","values","ɵɵdirectiveInject","i1","AccountService","i2","Router","selectors","decls","vars","consts","template","AccountDetailsComponent_Template","rf","ctx","ɵɵtemplate","AccountDetailsComponent_tr_13_Template","ɵɵproperty"],"sources":["F:\\MyProjects\\bank-payment-frontend\\src\\app\\component\\account-details\\account-details.component.ts","F:\\MyProjects\\bank-payment-frontend\\src\\app\\component\\account-details\\account-details.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { AccountService } from '../../account.service';  // Import the AccountService\n@Component({\n  selector: 'app-account-details',\n  templateUrl: './account-details.component.html',\n  styleUrls: ['./account-details.component.css']\n})\nexport class AccountDetailsComponent {\n\n  acc:any={\n    accountNumber:'',\n    amount:'',\n    accountHolderName:''\n  };\n\n  constructor(private accountService: AccountService,private router:Router) {}\n\n  ngOnInit(): void {\n    this.loadAccountDetails();\n  }\n\n  loadAccountDetails() {\n    // Call a service to load the account details (you can implement this based on your backend)\n    this.accountService.getAccountDetails().subscribe((data:any) => {\n      this.acc = Object.values(data);\n\n      });\n  }\n\n}\n","\n<div class=\"container\">\n    <h1>Account Details</h1>\n    \n    <!-- Account Details Table -->\n    <table class=\"account-table\">\n      <thead>\n        <tr>\n          <th>Account Number</th>\n          <th>Account Holder Name</th>\n          <th>Balance</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let dat of acc\">\n          <td>{{ dat.accountNumber }}</td>\n          <td>{{ dat.accountHolderName }}</td>\n          <td>{{ dat.amount | currency }}</td>\n        </tr>\n      </tbody>\n    </table>\n  \n    <!-- Deposit Section -->\n    <!-- <div class=\"form-section\">\n      <h2>Deposit</h2>\n      <mat-form-field appearance=\"fill\" class=\"full-width\">\n        <mat-label>Account Number</mat-label>\n        <input matInput [(ngModel)]=\"acc.accountNumber\" placeholder=\"Enter Account Number\" />\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" class=\"full-width\">\n        <mat-label>Amount to Deposit</mat-label>\n        <input matInput [(ngModel)]=\"acc.amount\" placeholder=\"Enter Amount\" />\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" (click)=\"deposit()\" class=\"full-width\">Deposit</button>\n    </div> -->\n  \n    <!-- Withdraw Section -->\n    <!-- <div class=\"form-section\">\n      <h2>Withdraw</h2>\n      <mat-form-field appearance=\"fill\" class=\"full-width\">\n        <mat-label>Account Number</mat-label>\n        <input matInput [(ngModel)]=\"acc.accountNumber\" placeholder=\"Enter Account Number\" />\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" class=\"full-width\">\n        <mat-label>Amount to Withdraw</mat-label>\n        <input matInput [(ngModel)]=\"acc.amount\" placeholder=\"Enter Amount\" />\n      </mat-form-field>\n      <button mat-raised-button color=\"warn\" (click)=\"withdraw()\" class=\"full-width\">Withdraw</button>\n    </div>\n  </div> -->\n  "],"mappings":";;;;;;ICcQA,EAAA,CAAAC,cAAA,SAA4B;IACtBD,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAChCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA2B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACpCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA2B;;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAFhCH,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,aAAA,CAAuB;IACvBP,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAE,iBAAA,CAA2B;IAC3BR,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAS,WAAA,OAAAH,MAAA,CAAAI,MAAA,EAA2B;;;ADTzC,OAAM,MAAOC,uBAAuB;EAQlCC,YAAoBC,cAA8B,EAASC,MAAa;IAApD,KAAAD,cAAc,GAAdA,cAAc;IAAyB,KAAAC,MAAM,GAANA,MAAM;IANjE,KAAAC,GAAG,GAAK;MACNR,aAAa,EAAC,EAAE;MAChBG,MAAM,EAAC,EAAE;MACTF,iBAAiB,EAAC;KACnB;EAE0E;EAE3EQ,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkBA,CAAA;IAChB;IACA,IAAI,CAACJ,cAAc,CAACK,iBAAiB,EAAE,CAACC,SAAS,CAAEC,IAAQ,IAAI;MAC7D,IAAI,CAACL,GAAG,GAAGM,MAAM,CAACC,MAAM,CAACF,IAAI,CAAC;IAE9B,CAAC,CAAC;EACN;;;uBApBWT,uBAAuB,EAAAX,EAAA,CAAAuB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAzB,EAAA,CAAAuB,iBAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAvBhB,uBAAuB;MAAAiB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCPpClC,EAAA,CAAAC,cAAA,aAAuB;UACfD,EAAA,CAAAE,MAAA,sBAAe;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAGxBH,EAAA,CAAAC,cAAA,eAA6B;UAGnBD,EAAA,CAAAE,MAAA,qBAAc;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACvBH,EAAA,CAAAC,cAAA,SAAI;UAAAD,EAAA,CAAAE,MAAA,0BAAmB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAC5BH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,eAAO;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAGpBH,EAAA,CAAAC,cAAA,aAAO;UACLD,EAAA,CAAAoC,UAAA,KAAAC,sCAAA,gBAIK;UACPrC,EAAA,CAAAG,YAAA,EAAQ;;;UALcH,EAAA,CAAAI,SAAA,IAAM;UAANJ,EAAA,CAAAsC,UAAA,YAAAH,GAAA,CAAApB,GAAA,CAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}