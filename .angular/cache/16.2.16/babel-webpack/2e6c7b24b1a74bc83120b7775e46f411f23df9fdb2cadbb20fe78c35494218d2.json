{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../account.service\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nexport class AccountComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n  }\n  ngOnInit() {\n    this.loadAccountDetails();\n  }\n  loadAccountDetails() {\n    // Call a service to load the account details (you can implement this based on your backend)\n    Example: this.accountService.getAccountDetails().subscribe(data => {\n      this.accountDetails = data;\n    });\n  }\n  deposit() {\n    this.accountService.deposit(this.accountNumber, this.amount).subscribe(data => {\n      this.accountDetails = data; // Update account details after deposit\n      console.log('Deposit successful', data);\n    }, error => {\n      console.error('Error depositing', error);\n    });\n  }\n  withdraw() {\n    this.accountService.withdraw(this.accountNumber, this.amount).subscribe(data => {\n      this.accountDetails = data; // Update account details after withdrawal\n      console.log('Withdrawal successful', data);\n    }, error => {\n      console.error('Error withdrawing', error);\n    });\n  }\n  static {\n    this.ɵfac = function AccountComponent_Factory(t) {\n      return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountComponent,\n      selectors: [[\"app-account\"]],\n      decls: 26,\n      vars: 8,\n      consts: [[\"matInput\", \"\", \"placeholder\", \"Amount to deposit\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"matInput\", \"\", \"placeholder\", \"Amount to withdraw\", 3, \"ngModel\", \"ngModelChange\"]],\n      template: function AccountComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n          i0.ɵɵtext(2, \"Account Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\");\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"p\");\n          i0.ɵɵtext(8);\n          i0.ɵɵpipe(9, \"currency\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\")(11, \"h2\");\n          i0.ɵɵtext(12, \"Deposit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"mat-form-field\")(14, \"input\", 0);\n          i0.ɵɵlistener(\"ngModelChange\", function AccountComponent_Template_input_ngModelChange_14_listener($event) {\n            return ctx.accountNumber = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"mat-form-field\")(16, \"input\", 0);\n          i0.ɵɵlistener(\"ngModelChange\", function AccountComponent_Template_input_ngModelChange_16_listener($event) {\n            return ctx.amount = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_17_listener() {\n            return ctx.deposit();\n          });\n          i0.ɵɵtext(18, \"Deposit\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\")(20, \"h2\");\n          i0.ɵɵtext(21, \"Withdraw\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"mat-form-field\")(23, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function AccountComponent_Template_input_ngModelChange_23_listener($event) {\n            return ctx.amount = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_24_listener() {\n            return ctx.withdraw();\n          });\n          i0.ɵɵtext(25, \"Withdraw\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\"Account Number: \", ctx.accountDetails == null ? null : ctx.accountDetails.accountNumber, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Account Holder: \", ctx.accountDetails == null ? null : ctx.accountDetails.accountHolderName, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Balance: \", i0.ɵɵpipeBind1(9, 6, ctx.accountDetails == null ? null : ctx.accountDetails.amount), \"\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.accountNumber);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.amount);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.amount);\n        }\n      },\n      dependencies: [i2.MatButton, i3.MatInput, i4.MatFormField, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i6.CurrencyPipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["AccountComponent","constructor","accountService","ngOnInit","loadAccountDetails","Example","getAccountDetails","subscribe","data","accountDetails","deposit","accountNumber","amount","console","log","error","withdraw","i0","ɵɵdirectiveInject","i1","AccountService","selectors","decls","vars","consts","template","AccountComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AccountComponent_Template_input_ngModelChange_14_listener","$event","AccountComponent_Template_input_ngModelChange_16_listener","AccountComponent_Template_button_click_17_listener","AccountComponent_Template_input_ngModelChange_23_listener","AccountComponent_Template_button_click_24_listener","ɵɵadvance","ɵɵtextInterpolate1","accountHolderName","ɵɵpipeBind1","ɵɵproperty"],"sources":["F:\\MyProjects\\bank-payment-frontend\\src\\app\\account\\account.component.ts","F:\\MyProjects\\bank-payment-frontend\\src\\app\\account\\account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AccountService } from '../account.service';  // Import the AccountService\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n  accountNumber:any;  // Set to the account number you want to operate on\n  amount: any;\n  accountDetails: any;\n\n  constructor(private accountService: AccountService) {}\n\n  ngOnInit(): void {\n    this.loadAccountDetails();\n  }\n\n  loadAccountDetails() {\n    // Call a service to load the account details (you can implement this based on your backend)\n     Example: this.accountService.getAccountDetails().subscribe(data => { this.accountDetails = data });\n  }\n\n  deposit() {\n    this.accountService.deposit(this.accountNumber, this.amount).subscribe(\n      (data) => {\n        this.accountDetails = data;  // Update account details after deposit\n        console.log('Deposit successful', data);\n      },\n      (error) => {\n        console.error('Error depositing', error);\n      }\n    );\n  }\n\n  withdraw() {\n    this.accountService.withdraw(this.accountNumber, this.amount).subscribe(\n      (data) => {\n        this.accountDetails = data;  // Update account details after withdrawal\n        console.log('Withdrawal successful', data);\n      },\n      (error) => {\n        console.error('Error withdrawing', error);\n      }\n    );\n  }\n}\n","<div>\n    <h1>Account Details</h1>\n    <p>Account Number: {{ accountDetails?.accountNumber }}</p>\n    <p>Account Holder: {{ accountDetails?.accountHolderName }}</p>\n    <p>Balance: {{ accountDetails?.amount | currency }}</p>\n  \n    <div>\n      <h2>Deposit</h2>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"accountNumber\" placeholder=\"Amount to deposit\">\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"amount\" placeholder=\"Amount to deposit\">\n      </mat-form-field>\n      <button mat-raised-button (click)=\"deposit()\">Deposit</button>\n    </div>\n  \n    <div>\n      <h2>Withdraw</h2>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"amount\" placeholder=\"Amount to withdraw\">\n      </mat-form-field>\n      <button mat-raised-button (click)=\"withdraw()\">Withdraw</button>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}