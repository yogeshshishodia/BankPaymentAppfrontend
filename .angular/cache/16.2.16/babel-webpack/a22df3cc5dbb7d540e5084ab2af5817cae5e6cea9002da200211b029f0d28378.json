{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/account.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/forms\";\nfunction CheckBalanceComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Balance: \", ctx_r0.balance, \"\");\n  }\n}\nfunction CheckBalanceComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nexport class CheckBalanceComponent {\n  constructor(_route, accountService) {\n    this._route = _route;\n    this.accountService = accountService;\n    this.accountHolderName = '';\n    this.balance = null;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    // Retrieve the accountHolderName from localStorage\n    this.accountHolderName = localStorage.getItem('accountHolderName') || '';\n    // Fetch the balance for the logged-in user only\n    if (this.accountHolderName) {\n      this.checkBalance();\n    }\n  }\n  checkBalance() {\n    this.accountService.getBalance(this.accountHolderName).subscribe(response => {\n      this.balance = response;\n      this.errorMessage = '';\n    }, error => {\n      this.balance = null;\n      this.errorMessage = 'Account not found or error retrieving balance';\n    });\n  }\n  static {\n    this.ɵfac = function CheckBalanceComponent_Factory(t) {\n      return new (t || CheckBalanceComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AccountService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CheckBalanceComponent,\n      selectors: [[\"app-check-balance\"]],\n      decls: 9,\n      vars: 3,\n      consts: [[3, \"ngSubmit\"], [\"matInput\", \"\", \"placeholder\", \"Username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [4, \"ngIf\"], [2, \"color\", \"red\"]],\n      template: function CheckBalanceComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Check Balance\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function CheckBalanceComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.checkBalance();\n          });\n          i0.ɵɵelementStart(3, \"mat-form-field\")(4, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function CheckBalanceComponent_Template_input_ngModelChange_4_listener($event) {\n            return ctx.accountHolderName = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"button\", 2);\n          i0.ɵɵtext(6, \"Check Balance\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(7, CheckBalanceComponent_div_7_Template, 3, 1, \"div\", 3);\n          i0.ɵɵtemplate(8, CheckBalanceComponent_div_8_Template, 3, 1, \"div\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.accountHolderName);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.balance !== null);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [i3.NgIf, i4.MatButton, i5.MatInput, i6.MatFormField, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","balance","ɵɵtextInterpolate","ctx_r1","errorMessage","CheckBalanceComponent","constructor","_route","accountService","accountHolderName","ngOnInit","localStorage","getItem","checkBalance","getBalance","subscribe","response","error","ɵɵdirectiveInject","i1","ActivatedRoute","i2","AccountService","selectors","decls","vars","consts","template","CheckBalanceComponent_Template","rf","ctx","ɵɵlistener","CheckBalanceComponent_Template_form_ngSubmit_2_listener","CheckBalanceComponent_Template_input_ngModelChange_4_listener","$event","ɵɵtemplate","CheckBalanceComponent_div_7_Template","CheckBalanceComponent_div_8_Template","ɵɵproperty"],"sources":["F:\\MyProjects\\bank-payment-frontend\\src\\app\\component\\check-balance\\check-balance.component.ts","F:\\MyProjects\\bank-payment-frontend\\src\\app\\component\\check-balance\\check-balance.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AccountService } from 'src/app/service/account.service';\n\n@Component({\n  selector: 'app-check-balance',\n  templateUrl: './check-balance.component.html',\n  styleUrls: ['./check-balance.component.css']\n})\nexport class CheckBalanceComponent implements OnInit {\n  accountHolderName: string = '';\n  balance: number | null = null;\n  errorMessage: string = '';\n\n  constructor(\n    private _route: ActivatedRoute,\n    private accountService: AccountService\n  ) {}\n\n  ngOnInit(): void {\n    // Retrieve the accountHolderName from localStorage\n    this.accountHolderName = localStorage.getItem('accountHolderName') || '';\n\n    // Fetch the balance for the logged-in user only\n    if (this.accountHolderName) {\n      this.checkBalance();\n    }\n  }\n\n  checkBalance(): void {\n    this.accountService.getBalance(this.accountHolderName).subscribe(\n      (response) => {\n        this.balance = response;\n        this.errorMessage = '';\n      },\n      (error) => {\n        this.balance = null;\n        this.errorMessage = 'Account not found or error retrieving balance';\n      }\n    );\n  }\n}\n","<h2>Check Balance</h2>\n\n<form (ngSubmit)=\"checkBalance()\">\n  <mat-form-field>\n    <input matInput placeholder=\"Username\" [(ngModel)]=\"accountHolderName\" name=\"username\" required>\n  </mat-form-field>\n\n  <button mat-raised-button color=\"primary\" type=\"submit\">Check Balance</button>\n</form>\n\n<div *ngIf=\"balance !== null\">\n  <p>Balance: {{ balance }}</p>\n</div>\n\n<div *ngIf=\"errorMessage\">\n  <p style=\"color: red;\">{{ errorMessage }}</p>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}