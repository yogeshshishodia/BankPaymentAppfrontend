{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AccountDetailsComponent = class AccountDetailsComponent {\n  constructor(router, accountService) {\n    this.router = router;\n    this.accountService = accountService;\n    this.acc = {\n      accountNumber: '',\n      amount: '',\n      accountHolderName: ''\n    };\n  }\n  ngOnInit() {\n    this.loadAccountDetails();\n  }\n  loadAccountDetails() {\n    // Call a service to load the account details (you can implement this based on your backend)\n    this.accountService.getAccountDetails().subscribe(data => {\n      this.acc = Object.values(data);\n    });\n  }\n};\nAccountDetailsComponent = __decorate([Component({\n  selector: 'app-account-details',\n  templateUrl: './account-details.component.html',\n  styleUrls: ['./account-details.component.css']\n})], AccountDetailsComponent);","map":{"version":3,"names":["Component","AccountDetailsComponent","constructor","router","accountService","acc","accountNumber","amount","accountHolderName","ngOnInit","loadAccountDetails","getAccountDetails","subscribe","data","Object","values","__decorate","selector","templateUrl","styleUrls"],"sources":["F:\\MyProjects\\bank-payment-frontend\\src\\app\\component\\account-details\\account-details.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { AccountService } from '../account.service';  // Import the AccountService\n@Component({\n  selector: 'app-account-details',\n  templateUrl: './account-details.component.html',\n  styleUrls: ['./account-details.component.css']\n})\nexport class AccountDetailsComponent {\n\n  acc:any={\n    accountNumber:'',\n    amount:'',\n    accountHolderName:''\n  };\n\n  constructor(private router:Router, private accountService: AccountService) {}\n\n  ngOnInit(): void {\n    this.loadAccountDetails();\n  }\n\n  loadAccountDetails() {\n    // Call a service to load the account details (you can implement this based on your backend)\n    this.accountService.getAccountDetails().subscribe((data:any) => {\n      this.acc = Object.values(data);\n\n      });\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAQlCC,YAAoBC,MAAa,EAAUC,cAA8B;IAArD,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,cAAc,GAAdA,cAAc;IANzD,KAAAC,GAAG,GAAK;MACNC,aAAa,EAAC,EAAE;MAChBC,MAAM,EAAC,EAAE;MACTC,iBAAiB,EAAC;KACnB;EAE2E;EAE5EC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkBA,CAAA;IAChB;IACA,IAAI,CAACN,cAAc,CAACO,iBAAiB,EAAE,CAACC,SAAS,CAAEC,IAAQ,IAAI;MAC7D,IAAI,CAACR,GAAG,GAAGS,MAAM,CAACC,MAAM,CAACF,IAAI,CAAC;IAE9B,CAAC,CAAC;EACN;CAED;AAtBYZ,uBAAuB,GAAAe,UAAA,EALnChB,SAAS,CAAC;EACTiB,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWlB,uBAAuB,CAsBnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}