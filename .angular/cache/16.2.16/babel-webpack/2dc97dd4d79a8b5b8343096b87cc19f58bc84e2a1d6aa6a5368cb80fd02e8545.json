{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../account.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/forms\";\nfunction AccountComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2, \"Account Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const dat_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Account Number: \", dat_r1.accountNumber, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Account Holder: \", dat_r1.accountHolderName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Balance: \", dat_r1.amount, \"\");\n  }\n}\nexport class AccountComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.acc = {\n      accountNumber: '',\n      amount: '',\n      accountHolderName: ''\n    };\n  }\n  ngOnInit() {\n    this.loadAccountDetails();\n  }\n  loadAccountDetails() {\n    // Call a service to load the account details (you can implement this based on your backend)\n    this.accountService.getAccountDetails().subscribe(data => {\n      this.acc = data;\n    });\n  }\n  deposit() {\n    this.accountService.deposit(this.acc.accountNumber, this.acc.amount).subscribe(data => {\n      this.acc = Object.values(data); // Convert object to array\n      console.log('Deposit successful', data);\n    }, error => {\n      console.error('Error depositing', error);\n    });\n  }\n  withdraw() {\n    this.accountService.withdraw(this.acc.accountNumber, this.acc.amount).subscribe(data => {\n      this.acc = data; // Update account details after withdrawal\n      console.log('Withdrawal successful', data);\n    }, error => {\n      console.error('Error withdrawing', error);\n    });\n  }\n  static {\n    this.ɵfac = function AccountComponent_Factory(t) {\n      return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountComponent,\n      selectors: [[\"app-account\"]],\n      decls: 18,\n      vars: 4,\n      consts: [[4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"placeholder\", \"Amount to deposit\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"matInput\", \"\", \"placeholder\", \"Amount to withdraw\", 3, \"ngModel\", \"ngModelChange\"]],\n      template: function AccountComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\");\n          i0.ɵɵtemplate(1, AccountComponent_div_1_Template, 9, 3, \"div\", 0);\n          i0.ɵɵelementStart(2, \"div\")(3, \"h2\");\n          i0.ɵɵtext(4, \"Deposit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"mat-form-field\")(6, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function AccountComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.acc.accountNumber = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"mat-form-field\")(8, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function AccountComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.acc.amount = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_9_listener() {\n            return ctx.deposit();\n          });\n          i0.ɵɵtext(10, \"Deposit\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\")(12, \"h2\");\n          i0.ɵɵtext(13, \"Withdraw\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"mat-form-field\")(15, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function AccountComponent_Template_input_ngModelChange_15_listener($event) {\n            return ctx.acc.amount = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_16_listener() {\n            return ctx.withdraw();\n          });\n          i0.ɵɵtext(17, \"Withdraw\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.acc);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.acc.accountNumber);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.acc.amount);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.acc.amount);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.MatButton, i4.MatInput, i5.MatFormField, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","dat_r1","accountNumber","accountHolderName","amount","AccountComponent","constructor","accountService","acc","ngOnInit","loadAccountDetails","getAccountDetails","subscribe","data","deposit","Object","values","console","log","error","withdraw","ɵɵdirectiveInject","i1","AccountService","selectors","decls","vars","consts","template","AccountComponent_Template","rf","ctx","ɵɵtemplate","AccountComponent_div_1_Template","ɵɵlistener","AccountComponent_Template_input_ngModelChange_6_listener","$event","AccountComponent_Template_input_ngModelChange_8_listener","AccountComponent_Template_button_click_9_listener","AccountComponent_Template_input_ngModelChange_15_listener","AccountComponent_Template_button_click_16_listener","ɵɵproperty"],"sources":["F:\\MyProjects\\bank-payment-frontend\\src\\app\\account\\account.component.ts","F:\\MyProjects\\bank-payment-frontend\\src\\app\\account\\account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AccountService } from '../account.service';  // Import the AccountService\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\nacc:any={\n  accountNumber:'',\n  amount:'',\n  accountHolderName:''\n};\n\n  constructor(private accountService: AccountService) {}\n\n  ngOnInit(): void {\n    this.loadAccountDetails();\n  }\n\n  loadAccountDetails() {\n    // Call a service to load the account details (you can implement this based on your backend)\n    this.accountService.getAccountDetails().subscribe((data:any) => {\n      this.acc = data\n\n      });\n  }\n\n  deposit() {\n    this.accountService.deposit(this.acc.accountNumber,this.acc.amount).subscribe(\n      (data:any) => {\n        this.acc = Object.values(data);  // Convert object to array\n\n        console.log('Deposit successful', data);\n      },\n      (error) => {\n        console.error('Error depositing', error);\n      }\n    );\n  }\n\n  withdraw() {\n    this.accountService.withdraw(this.acc.accountNumber, this.acc.amount).subscribe(\n      (data) => {\n        this.acc = data;  // Update account details after withdrawal\n        console.log('Withdrawal successful', data);\n      },\n      (error) => {\n        console.error('Error withdrawing', error);\n      }\n    );\n  }\n}\n","<div >\n  <div *ngFor=\"let dat of acc\">\n    <h1>Account Details</h1>\n    <p>Account Number: {{ dat.accountNumber }}</p>\n    <p>Account Holder: {{ dat.accountHolderName }}</p>\n    <p>Balance: {{ dat.amount }}</p>\n  </div>\n\n  \n    <div>\n      <h2>Deposit</h2>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"acc.accountNumber\" placeholder=\"Amount to deposit\">\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"acc.amount\" placeholder=\"Amount to deposit\">\n      </mat-form-field>\n      <button mat-raised-button (click)=\"deposit()\">Deposit</button>\n    </div>\n  \n    <div>\n      <h2>Withdraw</h2>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"acc.amount\" placeholder=\"Amount to withdraw\">\n      </mat-form-field>\n      <button mat-raised-button (click)=\"withdraw()\">Withdraw</button>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}