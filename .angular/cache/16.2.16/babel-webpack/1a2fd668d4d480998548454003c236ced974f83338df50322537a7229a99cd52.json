{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../account.service\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nexport class AccountComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.accountNumber = 1; // Set to the account number you want to operate on\n    this.amount = 0;\n  }\n  ngOnInit() {\n    this.loadAccountDetails();\n  }\n  loadAccountDetails() {\n    // Call a service to load the account details (you can implement this based on your backend)\n    // Example: this.accountService.getAccountDetails(this.accountNumber).subscribe(data => { this.accountDetails = data });\n  }\n  deposit() {\n    this.accountService.deposit(this.accountNumber, this.amount).subscribe(data => {\n      this.accountDetails = data; // Update account details after deposit\n      console.log('Deposit successful', data);\n    }, error => {\n      console.error('Error depositing', error);\n    });\n  }\n  withdraw() {\n    this.accountService.withdraw(this.accountNumber, this.amount).subscribe(data => {\n      this.accountDetails = data; // Update account details after withdrawal\n      console.log('Withdrawal successful', data);\n    }, error => {\n      console.error('Error withdrawing', error);\n    });\n  }\n  static {\n    this.ɵfac = function AccountComponent_Factory(t) {\n      return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountComponent,\n      selectors: [[\"app-account\"]],\n      decls: 24,\n      vars: 7,\n      consts: [[\"matInput\", \"\", \"placeholder\", \"Amount to deposit\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"matInput\", \"\", \"placeholder\", \"Amount to withdraw\", 3, \"ngModel\", \"ngModelChange\"]],\n      template: function AccountComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n          i0.ɵɵtext(2, \"Account Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\");\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"p\");\n          i0.ɵɵtext(8);\n          i0.ɵɵpipe(9, \"currency\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\")(11, \"h2\");\n          i0.ɵɵtext(12, \"Deposit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"mat-form-field\")(14, \"input\", 0);\n          i0.ɵɵlistener(\"ngModelChange\", function AccountComponent_Template_input_ngModelChange_14_listener($event) {\n            return ctx.amount = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_15_listener() {\n            return ctx.deposit();\n          });\n          i0.ɵɵtext(16, \"Deposit\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\")(18, \"h2\");\n          i0.ɵɵtext(19, \"Withdraw\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"mat-form-field\")(21, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function AccountComponent_Template_input_ngModelChange_21_listener($event) {\n            return ctx.amount = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_22_listener() {\n            return ctx.withdraw();\n          });\n          i0.ɵɵtext(23, \"Withdraw\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\"Account Number: \", ctx.accountDetails == null ? null : ctx.accountDetails.accountNumber, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Account Holder: \", ctx.accountDetails == null ? null : ctx.accountDetails.accountHolderName, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Balance: \", i0.ɵɵpipeBind1(9, 5, ctx.accountDetails == null ? null : ctx.accountDetails.amount), \"\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.amount);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.amount);\n        }\n      },\n      dependencies: [i2.MatButton, i3.MatInput, i4.MatFormField, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i6.CurrencyPipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["AccountComponent","constructor","accountService","accountNumber","amount","ngOnInit","loadAccountDetails","deposit","subscribe","data","accountDetails","console","log","error","withdraw","i0","ɵɵdirectiveInject","i1","AccountService","selectors","decls","vars","consts","template","AccountComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AccountComponent_Template_input_ngModelChange_14_listener","$event","AccountComponent_Template_button_click_15_listener","AccountComponent_Template_input_ngModelChange_21_listener","AccountComponent_Template_button_click_22_listener","ɵɵadvance","ɵɵtextInterpolate1","accountHolderName","ɵɵpipeBind1","ɵɵproperty"],"sources":["F:\\MyProjects\\bank-payment-frontend\\src\\app\\account\\account.component.ts","F:\\MyProjects\\bank-payment-frontend\\src\\app\\account\\account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../account.service';  // Import the AccountService\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n  accountNumber: number = 1;  // Set to the account number you want to operate on\n  amount: number = 0;\n  accountDetails: any;\n\n  constructor(private accountService: AccountService) {}\n\n  ngOnInit(): void {\n    this.loadAccountDetails();\n  }\n\n  loadAccountDetails() {\n    // Call a service to load the account details (you can implement this based on your backend)\n    // Example: this.accountService.getAccountDetails(this.accountNumber).subscribe(data => { this.accountDetails = data });\n  }\n\n  deposit() {\n    this.accountService.deposit(this.accountNumber, this.amount).subscribe(\n      (data) => {\n        this.accountDetails = data;  // Update account details after deposit\n        console.log('Deposit successful', data);\n      },\n      (error) => {\n        console.error('Error depositing', error);\n      }\n    );\n  }\n\n  withdraw() {\n    this.accountService.withdraw(this.accountNumber, this.amount).subscribe(\n      (data) => {\n        this.accountDetails = data;  // Update account details after withdrawal\n        console.log('Withdrawal successful', data);\n      },\n      (error) => {\n        console.error('Error withdrawing', error);\n      }\n    );\n  }\n}\n","<div>\n    <h1>Account Details</h1>\n    <p>Account Number: {{ accountDetails?.accountNumber }}</p>\n    <p>Account Holder: {{ accountDetails?.accountHolderName }}</p>\n    <p>Balance: {{ accountDetails?.amount | currency }}</p>\n  \n    <div>\n      <h2>Deposit</h2>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"amount\" placeholder=\"Amount to deposit\">\n      </mat-form-field>\n      <button mat-raised-button (click)=\"deposit()\">Deposit</button>\n    </div>\n  \n    <div>\n      <h2>Withdraw</h2>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"amount\" placeholder=\"Amount to withdraw\">\n      </mat-form-field>\n      <button mat-raised-button (click)=\"withdraw()\">Withdraw</button>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}