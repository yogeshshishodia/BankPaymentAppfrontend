{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../account.service\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/forms\";\nfunction AccountComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2, \"Account Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\")(10, \"h2\");\n    i0.ɵɵtext(11, \"Deposit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"input\", 1);\n    i0.ɵɵlistener(\"ngModelChange\", function AccountComponent_div_0_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.acc.accountNumber = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"mat-form-field\")(15, \"input\", 1);\n    i0.ɵɵlistener(\"ngModelChange\", function AccountComponent_div_0_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.acc.amount = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AccountComponent_div_0_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deposit());\n    });\n    i0.ɵɵtext(17, \"Deposit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\")(19, \"h2\");\n    i0.ɵɵtext(20, \"Withdraw\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"mat-form-field\")(22, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function AccountComponent_div_0_Template_input_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.acc.amount = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AccountComponent_div_0_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.withdraw());\n    });\n    i0.ɵɵtext(24, \"Withdraw\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Account Number: \", ctx_r0.acc.accountNumber, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Account Holder: \", ctx_r0.acc.accountHolderName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Balance: \", ctx_r0.acc.amount, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.acc.accountNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.acc.amount);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.acc.amount);\n  }\n}\nexport class AccountComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.acc = {\n      accountNumber: '',\n      amount: '',\n      accountHolderName: ''\n    };\n  }\n  ngOnInit() {\n    this.loadAccountDetails();\n  }\n  loadAccountDetails() {\n    // Call a service to load the account details (you can implement this based on your backend)\n    this.accountService.getAccountDetails().subscribe(data => {\n      this.acc = data;\n    });\n  }\n  deposit() {\n    this.accountService.deposit(this.acc.accountNumber, this.acc.amount).subscribe(data => {\n      this.acc = data; // Update account details after deposit\n      console.log('Deposit successful', data);\n    }, error => {\n      console.error('Error depositing', error);\n    });\n  }\n  withdraw() {\n    this.accountService.withdraw(this.acc.accountNumber, this.acc.amount).subscribe(data => {\n      this.acc = data; // Update account details after withdrawal\n      console.log('Withdrawal successful', data);\n    }, error => {\n      console.error('Error withdrawing', error);\n    });\n  }\n  static {\n    this.ɵfac = function AccountComponent_Factory(t) {\n      return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountComponent,\n      selectors: [[\"app-account\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[4, \"ngF\", \"ngFOf\"], [\"matInput\", \"\", \"placeholder\", \"Amount to deposit\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"matInput\", \"\", \"placeholder\", \"Amount to withdraw\", 3, \"ngModel\", \"ngModelChange\"]],\n      template: function AccountComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AccountComponent_div_0_Template, 25, 6, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngFOf\", ctx.acc);\n        }\n      },\n      dependencies: [i2.MatButton, i3.MatInput, i4.MatFormField, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AccountComponent_div_0_Template_input_ngModelChange_13_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","acc","accountNumber","AccountComponent_div_0_Template_input_ngModelChange_15_listener","ctx_r4","amount","AccountComponent_div_0_Template_button_click_16_listener","ctx_r5","deposit","AccountComponent_div_0_Template_input_ngModelChange_22_listener","ctx_r6","AccountComponent_div_0_Template_button_click_23_listener","ctx_r7","withdraw","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","accountHolderName","ɵɵproperty","AccountComponent","constructor","accountService","ngOnInit","loadAccountDetails","getAccountDetails","subscribe","data","console","log","error","ɵɵdirectiveInject","i1","AccountService","selectors","decls","vars","consts","template","AccountComponent_Template","rf","ctx","ɵɵtemplate","AccountComponent_div_0_Template"],"sources":["F:\\MyProjects\\bank-payment-frontend\\src\\app\\account\\account.component.ts","F:\\MyProjects\\bank-payment-frontend\\src\\app\\account\\account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AccountService } from '../account.service';  // Import the AccountService\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\nacc:any={\n  accountNumber:'',\n  amount:'',\n  accountHolderName:''\n};\n\n  constructor(private accountService: AccountService) {}\n\n  ngOnInit(): void {\n    this.loadAccountDetails();\n  }\n\n  loadAccountDetails() {\n    // Call a service to load the account details (you can implement this based on your backend)\n    this.accountService.getAccountDetails().subscribe((data:any) => {\n      this.acc = data\n\n      });\n  }\n\n  deposit() {\n    this.accountService.deposit(this.acc.accountNumber,this.acc.amount).subscribe(\n      (data:any) => {\n        this.acc = data;  // Update account details after deposit\n        console.log('Deposit successful', data);\n      },\n      (error) => {\n        console.error('Error depositing', error);\n      }\n    );\n  }\n\n  withdraw() {\n    this.accountService.withdraw(this.acc.accountNumber, this.acc.amount).subscribe(\n      (data) => {\n        this.acc = data;  // Update account details after withdrawal\n        console.log('Withdrawal successful', data);\n      },\n      (error) => {\n        console.error('Error withdrawing', error);\n      }\n    );\n  }\n}\n","<div *ngF=\"let dat of acc\">\n    <h1>Account Details</h1>\n    <p>Account Number: {{ acc.accountNumber }}</p>\n    <p>Account Holder: {{ acc.accountHolderName }}</p>\n    <p>Balance: {{ acc.amount }}</p>\n  \n    <div>\n      <h2>Deposit</h2>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"acc.accountNumber\" placeholder=\"Amount to deposit\">\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"acc.amount\" placeholder=\"Amount to deposit\">\n      </mat-form-field>\n      <button mat-raised-button (click)=\"deposit()\">Deposit</button>\n    </div>\n  \n    <div>\n      <h2>Withdraw</h2>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"acc.amount\" placeholder=\"Amount to withdraw\">\n      </mat-form-field>\n      <button mat-raised-button (click)=\"withdraw()\">Withdraw</button>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}