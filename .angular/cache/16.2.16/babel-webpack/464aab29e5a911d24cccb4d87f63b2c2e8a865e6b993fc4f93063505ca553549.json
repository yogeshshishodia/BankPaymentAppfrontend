{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080';\n  }\n  getAccountDetails() {\n    return this.http.get(\"http://localhost:8080/getall\");\n  }\n  create(account) {\n    return this.http.post(\"http://localhost:8080/create\", account);\n  }\n  login(account) {\n    return this.http.post(\"http://localhost:8080/log\", account);\n  }\n  register(registration) {\n    return this.http.post(\"http://localhost:8080/create\", registration);\n  }\n  // Deposit Method\n  deposit(accountNumber, amount) {\n    return this.http.put(`${this.apiUrl}/deposit/${accountNumber}/${amount}`, {});\n  }\n  // Withdraw Method\n  withdraw(accountNumber, amount) {\n    return this.http.put(`${this.apiUrl}/withdraw/${accountNumber}/${amount}`, {});\n  }\n  // Method to fetch balance\n  getBalance(accountHolderName) {\n    return this.http.get(`${this.apiUrl}/balance/${accountHolderName}`);\n  }\n  static {\n    this.ɵfac = function AccountService_Factory(t) {\n      return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AccountService,\n      factory: AccountService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AccountService","constructor","http","apiUrl","getAccountDetails","get","create","account","post","login","register","registration","deposit","accountNumber","amount","put","withdraw","getBalance","accountHolderName","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["F:\\MyProjects\\bank-payment-frontend\\src\\app\\service\\account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  private apiUrl = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) {}\n\n  getAccountDetails() {\n    return this.http.get(\"http://localhost:8080/getall\");\n  }\n\n  public create(account:any){\n    return this.http.post(\"http://localhost:8080/create\",account)\n\n  }\n  public login(account:any){\n    return this.http.post(\"http://localhost:8080/log\",account);\n  }\n  public register(registration:any):Observable<any>{\n    return this.http.post<any>(\"http://localhost:8080/create\", registration)\n   }\n\n  // Deposit Method\n  deposit(accountNumber: any, amount:any) {\n    return this.http.put(`${this.apiUrl}/deposit/${accountNumber}/${amount}`, {});\n  }\n\n  // Withdraw Method\n  withdraw(accountNumber: number, amount: number): Observable<any> {\n    return this.http.put(`${this.apiUrl}/withdraw/${accountNumber}/${amount}`, {});\n  }\n\n    // Method to fetch balance\n    getBalance(accountHolderName: string): Observable<number> {\n      return this.http.get<number>(`${this.apiUrl}/balance/${accountHolderName}`);\n    }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB;EAED;EAEvCC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,8BAA8B,CAAC;EACtD;EAEOC,MAAMA,CAACC,OAAW;IACvB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,8BAA8B,EAACD,OAAO,CAAC;EAE/D;EACOE,KAAKA,CAACF,OAAW;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,2BAA2B,EAACD,OAAO,CAAC;EAC5D;EACOG,QAAQA,CAACC,YAAgB;IAC9B,OAAO,IAAI,CAACT,IAAI,CAACM,IAAI,CAAM,8BAA8B,EAAEG,YAAY,CAAC;EACzE;EAED;EACAC,OAAOA,CAACC,aAAkB,EAAEC,MAAU;IACpC,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,YAAYU,aAAa,IAAIC,MAAM,EAAE,EAAE,EAAE,CAAC;EAC/E;EAEA;EACAE,QAAQA,CAACH,aAAqB,EAAEC,MAAc;IAC5C,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,aAAaU,aAAa,IAAIC,MAAM,EAAE,EAAE,EAAE,CAAC;EAChF;EAEE;EACAG,UAAUA,CAACC,iBAAyB;IAClC,OAAO,IAAI,CAAChB,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,YAAYe,iBAAiB,EAAE,CAAC;EAC7E;;;uBAjCSlB,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdtB,cAAc;MAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}